-----------------------------------DEPOSIT-----------------------------------

### Get auth token
POST http://localhost:4111/api/v1/auth/login
Content-Type: application/json
{
  "username": "hanna",
  "password": "hannaPass1!"
}

### Positive test: User can deposit money to his bank account (valid boundary values: 0.01; 4999.99; 5000)
POST http://localhost:4111/api/v1/accounts/deposit
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": 0.01
}

### Negative test: User cannot deposit INVALID amount to his bank account
(boundary values: -0.99; 0; 5000.01; Double.MAX_VALUE; Double.MIN_VALUE)
POST http://localhost:4111/api/v1/accounts/deposit
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": -0.99
}

### Negative test: User cannot deposit amount to his non-existing bank account (invalid id)
POST http://localhost:4111/api/v1/accounts/deposit
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 3,
  "balance": 5000
}

### Positive test: Balance gets updated correctly when several deposit requests
are being sent to the same account concurrently
POST http://localhost:4111/api/v1/accounts/deposit
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": 500
}

-----------------------------------TRANSFER-----------------------------------

### Positive test: User can transfer money (boundary values: 0.01; 9 999.99; 10 000)
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 0.01
}

### Negative test: User cannot transfer INVALID amount
(boundary values: -0.01; 0; 10 000.01, Double.MAX_VALUE; Double.MIN_VALUE)
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": -0.01
}

### Positive test: User can transfer all the money to another bank account money.
Sender account balance is 5 000
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 5 000
}

### Negative test: User cannot transfer more money than there is on the sender account. Pre-condition: sender account balance is 2 000.
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 2 000.01
}

### Negative test: User cannot transfer money FROM NON-existing account.
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 999999,
  "receiverAccountId": 2,
  "amount": 1000
}

### Negative test: User cannot transfer money TO NON-existing account.
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 999999,
  "amount": 1000
}

### Negative test: Sender and receiver account cannot be the same.
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 1,
  "amount": 1000
}

### Positive test: Balance gets updated correctly when several transfer requests
are being sent with the same accounts concurrently
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 1000
}
-----------------------------------UPDATE USER NAME-----------------------------------

### Positive test: user can update his name with valid value
(2 letters with a space inbetween;
2 words, all letters, total length 254;
2 words, all letters, total length 255;
)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": "H C"
}

### Negative test: user cannot update his name with invalid name
(1 letter;
1 letter and a space;
3 words, all letters;
2 words, letters and numbers;
2 words, letters and special symbols;
1 space;)

PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": "Customer"
}

### Negative test: user cannot update his name with invalid name (name length 256)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": <random string with total length of 256 and a space in the middle>
}
### Negative test: user cannot update his name with the value which is already set
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": <name which is already set>
}
