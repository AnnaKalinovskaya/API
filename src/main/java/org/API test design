-----------------------------------DEPOSIT-----------------------------------

### Get auth token
POST http://localhost:4111/api/v1/auth/login
Content-Type: application/json
{
  "username": "hanna",
  "password": "hannaPass1!"
}

### Positive test: User can deposit money to his bank account (valid boundary values)
POST http://localhost:4111/api/v1/admin/users
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": 0.01
}

### Positive test: User can deposit money to his bank account (valid boundary values)
POST http://localhost:4111/api/v1/admin/users
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": 4999.99
}

### Positive test: User can deposit money to his bank account (valid boundary values)
POST http://localhost:4111/api/v1/admin/users
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": 5000
}

### Negative test: User cannot deposit INVALID amount to his bank account (boundary values)
POST http://localhost:4111/api/v1/admin/users
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": -0.99
}

### Negative test: User cannot deposit INVALID amount to his bank account (boundary values)
POST http://localhost:4111/api/v1/admin/users
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": 0
}

### Negative test: User cannot deposit INVALID amount to his bank account (boundary values)
POST http://localhost:4111/api/v1/admin/users
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 1,
  "balance": 5000.01
}

### Negative test: User cannot deposit amount to his non-existing bank account (invalid id)
POST http://localhost:4111/api/v1/admin/users
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "id": 3,
  "balance": 5000
}

-----------------------------------TRANSFER-----------------------------------

### Positive test: User can transfer money (boundary values)
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 0.01
}

### Positive test: User can transfer money (boundary values) when sender bank account balance is at least 10 000
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 9 999.99
}
### Positive test: User can transfer money (boundary values)
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 10 000
}

### Negative test: User cannot transfer INVALID amount (boundary values)
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": -0.01
}

### Negative test: User cannot transfer INVALID amount (boundary values)
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 0
}

### Negative test: User cannot transfer INVALID amount (boundary values)
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 10 000.01
}

### Positive test: User can transfer all the money to another bank account money. Sender account balance is 5 000
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 5 000
}

### Negative test: User cannot transfer more money than there is on the sender account. Pre-condition: sender account balance is 2 000.
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 2,
  "amount": 2 000.01
}

### Negative test: User cannot transfer money FROM NON-existing account.
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 3,
  "receiverAccountId": 2,
  "amount": 1000
}

### Negative test: User cannot transfer money TO NON-existing account.
POST http://localhost:4111/api/v1/accounts/transfer
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "senderAccountId": 1,
  "receiverAccountId": 3,
  "amount": 1000
}

-----------------------------------UPDATE USER NAME-----------------------------------

### Positive test: user can update his name with valid value (2 words, all letters)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": "Hanna Customer"
}

### Negative test: user cannot update his name with invalid name (1 word, all letters)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": "Customer"
}

### Negative test: user cannot update his name with invalid name (3 words, all letters)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": "customer hanna name"
}

### Negative test: user cannot update his name with invalid name (2 words, letters and numbers)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": "Customer H1"
}

### Negative test: user cannot update his name with invalid name (2 words, letters and special symbols)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": "Customer H!"
}

### Negative test: user cannot update his name with invalid name (1 space)
PUT http://localhost:4111/api/v1/customer/profile
Content-Type: application/json
Authorization: Basic aGFubmE6aGFubmFQYXNzMSE=
{
  "name": " "
}